Summary of "A Introduction to Ray Tracing"

**********************
Chapter 1 Introduction
**********************

Backward ray tracing

Shadow feeler sends shadow ray to light source to check whether it is a illumination ray.

Among all illuminating light, we only cares propagated light, which are (specular / diffuse) * (reflection / transmission) (4 types).

From eyes, we trace incident ray / eye ray / pixel ray to objects, and using surface normal to determine the direction of transmitted ray and reflected ray.

Recursively creates a ray tree and traverse on it.
Stops when we leave the scene OR contribution to the final image gets too small (reflect and transmit percent) -> called adaptive tree-depth control.

Aliasing (spatial or temporal) is a fundamental problem of sampling any signal in signal processing.

Anti-aliasing:  
	Spatial: motion blurring
	Temporal: [adaptive] supersampling (deterministic / stochastic)

Stochastic/ distributed ray tracing coincidently reduce the diffuse rays tracing problem by introducing noise, and hopefully, it will send more transmitted rays to directions where various lights come. (It also helps in depth of field and soft edges on shadows)

Statistical supersampling evaluates the “percentage of likelihood” of a right colour to determine how many rays are sent for each pixel.



***********************
Chapter 2 Intersections
***********************


/*
  Polygons
  Ray intersect with polygon: (pdf page 63)
    1. Check whether ray inersect plane of polygon
    2. Project ray into plane
    3. Project graph onto the plan where abs(A, B, C) is minimum
    4. Put the intersection to center, calculate toward u-axis
*/


/*
  Bounding Volumn (Box)
  Ray intersect with box (pdf page 76)
    1. Tracking the distance to all slaces
    2. The ray missed the box iff the MAX (near value) > MIN (far value)
*/


/*
  Intersection with Cone
*/



*************************
Chapter 3 Surface Physics
*************************

All objects have their resonant frequency, where they reflects the most.

Metamers are spectrally different but perceptually equivalent colors -> no correct spectrum for “orange”; they all look exactly the same 
((frequency vs. amplitude) plot vs. perception)

Perfect Reflection
    - Incident ray I, Normal N, Reflection ray R (all unit vector)
    - R = I - 2*(N*I)N
Perfect Diffuse (Lambertian reflection model):
    - Amount diffuse is proportional to cos(θ)

Perfect Specular Transmission:
    - sin (θ1) / sin (θ2) = η2 / η1, where η is index of refraction
Perfect Specular 
Total internal reflection (page 146) condition 1+ηit (Ci)*N > 0? 

Perfect Diffuse Transimission ≈ Perfect diffuse reflection, proportion to cos (θ)

Shading Model is used in real life to handle rough surface & color shifting.
app

 









Efficiency & Bugs
p81:  Simplify formulas first and then do the calculations (associative laws A*B+A*C = A*(B+C) improves efficiency!)

eps = 1e-10 && using long double
